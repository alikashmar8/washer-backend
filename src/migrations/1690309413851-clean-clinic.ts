import { MigrationInterface, QueryRunner } from "typeorm";

export class CleanClinic1690309413851 implements MigrationInterface {
    name = 'CleanClinic1690309413851'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`messages\` (\`id\` int NOT NULL AUTO_INCREMENT, \`text\` varchar(255) NULL, \`image\` varchar(255) NULL, \`video\` varchar(255) NULL, \`audio\` varchar(255) NULL, \`isRead\` tinyint NOT NULL DEFAULT 0, \`chatId\` int NOT NULL, \`sentTimestamp\` int NOT NULL, \`userId\` int NULL, \`employeeId\` int NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`device-tokens\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`token\` varchar(255) NOT NULL, \`fcmToken\` varchar(255) NULL, \`platform\` varchar(255) NOT NULL, \`isMobile\` tinyint NOT NULL, \`browser\` varchar(255) NULL, \`version\` varchar(255) NULL, \`os\` varchar(255) NOT NULL, \`source\` varchar(255) NULL, \`status\` enum ('ACTIVE', 'INACTIVE', 'LOGGED_OUT', 'TERMINATED') NOT NULL DEFAULT 'ACTIVE', \`loggedOutAt\` timestamp NULL, \`lastRequestAt\` timestamp NULL, \`userId\` int NULL, \`employeeId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`notifications\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`title\` varchar(255) NOT NULL, \`body\` varchar(255) NOT NULL, \`isRead\` tinyint NOT NULL DEFAULT 0, \`userId\` int NULL, \`employeeId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`categories\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` varchar(255) NOT NULL, \`icon\` varchar(255) NULL, \`isActive\` tinyint NOT NULL DEFAULT 0, \`parentId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`product_images\` (\`id\` int NOT NULL AUTO_INCREMENT, \`image\` varchar(255) NOT NULL, \`productId\` int NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`products\` (\`id\` int NOT NULL AUTO_INCREMENT, \`title\` varchar(255) NOT NULL, \`description\` varchar(255) NULL, \`price\` decimal NOT NULL DEFAULT '0', \`currency\` enum ('LBP', 'USD', 'EUR') NOT NULL DEFAULT 'LBP', \`views\` int NOT NULL DEFAULT '0', \`isActive\` tinyint NOT NULL DEFAULT 1, \`categoryId\` int NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`order_items\` (\`id\` int NOT NULL AUTO_INCREMENT, \`quantity\` int NOT NULL, \`price\` decimal NOT NULL DEFAULT '0', \`orderId\` int NOT NULL, \`productId\` int NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`orders\` (\`id\` int NOT NULL AUTO_INCREMENT, \`total\` int NOT NULL DEFAULT '0', \`userId\` int NULL, \`status\` enum ('PENDING', 'CONFIRMED', 'CANCELLED', 'DELIVERED', 'REJECTED', 'REVIEWED') NOT NULL, \`promoCode\` varchar(255) NULL, \`discountAmount\` int NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`promos\` (\`id\` varchar(36) NOT NULL, \`code\` varchar(255) NOT NULL, \`expiryDate\` datetime NULL, \`limit\` int NULL DEFAULT '0', \`numberOfUsage\` int NOT NULL DEFAULT '0', \`userId\` int NOT NULL, \`discountPercentage\` int NULL, \`discountAmount\` int NULL, \`isActive\` tinyint NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`service-categories\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` text NOT NULL, \`icon\` text NULL, \`isActive\` tinyint NOT NULL DEFAULT 0, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`service-types\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` text NOT NULL, \`price\` float NOT NULL, \`currency\` enum ('LBP', 'USD', 'EUR') NOT NULL DEFAULT 'USD', \`isActive\` tinyint NOT NULL DEFAULT 0, \`showVehicleSelection\` tinyint NOT NULL DEFAULT 0, \`showQuantityInput\` tinyint NOT NULL DEFAULT 0, \`isMotoAllowed\` tinyint NOT NULL DEFAULT 0, \`icon\` varchar(255) NOT NULL, \`categoryId\` int NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`credit-cards\` (\`id\` int NOT NULL AUTO_INCREMENT, \`cardHolderName\` text NULL, \`cardNumber\` varchar(255) NOT NULL, \`expiryDate\` datetime NOT NULL, \`cvcNumber\` varchar(255) NOT NULL, \`type\` varchar(255) NOT NULL, \`isDefault\` tinyint NOT NULL DEFAULT 0, \`userId\` int NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`wallets\` (\`id\` int NOT NULL AUTO_INCREMENT, \`balance\` float NOT NULL DEFAULT '0', \`currency\` enum ('LBP', 'USD', 'EUR') NOT NULL DEFAULT 'LBP', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`transactions\` (\`id\` varchar(36) NOT NULL, \`amount\` float NOT NULL, \`status\` enum ('pending', 'success', 'failed') NOT NULL DEFAULT 'pending', \`walletId\` int NULL, \`userId\` int NOT NULL, \`creditCardId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`vehicles\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`name\` varchar(255) NOT NULL, \`brand\` varchar(255) NOT NULL, \`model\` varchar(255) NOT NULL, \`year\` varchar(255) NULL, \`plateSymbol\` varchar(255) NOT NULL, \`plateNumber\` varchar(255) NOT NULL, \`color\` varchar(50) NOT NULL, \`photo\` varchar(255) NOT NULL, \`type\` enum ('CAR', 'MOTORCYCLE', 'RANGE', 'TRUCK', 'VAN') NOT NULL DEFAULT 'CAR', \`userId\` int NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`service-requests\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`status\` enum ('PENDING_APPROVAL', 'APPROVED', 'IN_PROGRESS', 'DONE', 'CANCELLED', 'REJECTED') NOT NULL DEFAULT 'PENDING_APPROVAL', \`cancelReason\` text NULL, \`requestedDate\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, \`confirmedDate\` timestamp NULL, \`paymentType\` enum ('CASH', 'WALLET', 'CREDIT CARD') NOT NULL DEFAULT 'CASH', \`quantity\` int NOT NULL DEFAULT '1', \`cost\` float NOT NULL, \`tips\` float NOT NULL DEFAULT '0', \`isPaid\` tinyint NOT NULL DEFAULT 0, \`isClientVerified\` tinyint NOT NULL DEFAULT 0, \`verificationCode\` text NOT NULL, \`userId\` int NOT NULL, \`employeeId\` int NULL, \`vehicleId\` int NULL, \`branchId\` int NOT NULL, \`transactionId\` varchar(255) NULL, \`typeId\` int NOT NULL, \`addressId\` int NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`users\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`firstName\` varchar(255) NOT NULL, \`lastName\` varchar(255) NOT NULL, \`username\` varchar(255) NOT NULL, \`password\` varchar(255) NOT NULL, \`email\` varchar(255) NOT NULL, \`phoneNumber\` varchar(255) NOT NULL, \`photo\` varchar(255) NULL, \`facebookId\` varchar(255) NULL, \`googleId\` varchar(255) NULL, \`appleId\` varchar(255) NULL, \`isActive\` tinyint NOT NULL DEFAULT 1, \`isEmailVerified\` tinyint NOT NULL DEFAULT 0, \`emailVerificationDate\` datetime NULL, \`isMobileVerified\` tinyint NOT NULL DEFAULT 0, \`mobileVerificationDate\` datetime NULL, \`points\` int NOT NULL DEFAULT '0', \`referralCode\` text NULL, \`mobileVerificationCode\` varchar(255) NULL, \`mobileVerificationCodeExpiry\` datetime NULL, \`emailVerificationCode\` varchar(255) NULL, \`emailVerificationCodeExpiry\` datetime NULL, \`passwordResetCode\` varchar(255) NULL, \`passwordResetExpiry\` datetime NULL, \`walletId\` int NOT NULL, UNIQUE INDEX \`IDX_fe0bb3f6520ee0469504521e71\` (\`username\`), UNIQUE INDEX \`IDX_97672ac88f789774dd47f7c8be\` (\`email\`), UNIQUE INDEX \`IDX_1e3d0240b49c40521aaeb95329\` (\`phoneNumber\`), UNIQUE INDEX \`REL_0a95e6aab86ff1b0278c18cf48\` (\`walletId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`chats\` (\`id\` int NOT NULL AUTO_INCREMENT, \`employeeId\` int NOT NULL, \`userId\` int NOT NULL, \`lastMessage\` varchar(255) NULL, \`lastMessageDate\` datetime NULL, \`lastSenderType\` enum ('USER', 'EMPLOYEE') NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`employees\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`firstName\` varchar(255) NOT NULL, \`lastName\` varchar(255) NOT NULL, \`username\` varchar(255) NOT NULL, \`password\` varchar(255) NOT NULL, \`email\` varchar(255) NULL, \`phoneNumber\` varchar(255) NOT NULL, \`photo\` varchar(255) NULL, \`role\` enum ('ADMIN', 'BRANCH_EMPLOYEE', 'DRIVER') NOT NULL DEFAULT 'DRIVER', \`isActive\` tinyint NOT NULL DEFAULT 1, \`passwordResetCode\` varchar(255) NULL, \`passwordResetExpiry\` datetime NULL, \`currentLongitude\` int NULL, \`currentLatitude\` int NULL, \`branchId\` int NULL, UNIQUE INDEX \`IDX_31358a1a133482b25fe81b021e\` (\`username\`), UNIQUE INDEX \`IDX_765bc1ac8967533a04c74a9f6a\` (\`email\`), UNIQUE INDEX \`IDX_5a397d481bad751781fa1adfab\` (\`phoneNumber\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`branches\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`description\` varchar(255) NOT NULL, \`isActive\` tinyint NOT NULL DEFAULT 0, \`addressId\` int NOT NULL, UNIQUE INDEX \`REL_7fc85a35416284146d732986c6\` (\`addressId\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`addresses\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`city\` text NOT NULL, \`region\` text NOT NULL, \`street\` text NOT NULL, \`building\` text NOT NULL, \`description\` text NOT NULL, \`lat\` float NOT NULL, \`lon\` float NOT NULL, \`isDefault\` tinyint NOT NULL DEFAULT 0, \`userId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`ads\` (\`id\` int NOT NULL AUTO_INCREMENT, \`title\` varchar(255) NOT NULL, \`description\` varchar(255) NULL, \`isActive\` tinyint NOT NULL DEFAULT 0, \`image\` varchar(255) NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`settings\` (\`id\` int NOT NULL AUTO_INCREMENT, \`createdAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`key\` varchar(255) NOT NULL, \`value\` varchar(255) NULL, UNIQUE INDEX \`IDX_c8639b7626fa94ba8265628f21\` (\`key\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`messages\` ADD CONSTRAINT \`FK_36bc604c820bb9adc4c75cd4115\` FOREIGN KEY (\`chatId\`) REFERENCES \`chats\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`messages\` ADD CONSTRAINT \`FK_4838cd4fc48a6ff2d4aa01aa646\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`messages\` ADD CONSTRAINT \`FK_89e60bfa9033af7efb53d68e96c\` FOREIGN KEY (\`employeeId\`) REFERENCES \`employees\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`device-tokens\` ADD CONSTRAINT \`FK_837f09bbda6e2a8d94bfc79d191\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`device-tokens\` ADD CONSTRAINT \`FK_0d78ba9dbc5d5f2d196acecd8ef\` FOREIGN KEY (\`employeeId\`) REFERENCES \`employees\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`notifications\` ADD CONSTRAINT \`FK_692a909ee0fa9383e7859f9b406\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`notifications\` ADD CONSTRAINT \`FK_6018a5cad24d71d841a407929cb\` FOREIGN KEY (\`employeeId\`) REFERENCES \`employees\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`categories\` ADD CONSTRAINT \`FK_9a6f051e66982b5f0318981bcaa\` FOREIGN KEY (\`parentId\`) REFERENCES \`categories\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`product_images\` ADD CONSTRAINT \`FK_b367708bf720c8dd62fc6833161\` FOREIGN KEY (\`productId\`) REFERENCES \`products\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`products\` ADD CONSTRAINT \`FK_ff56834e735fa78a15d0cf21926\` FOREIGN KEY (\`categoryId\`) REFERENCES \`categories\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_items\` ADD CONSTRAINT \`FK_f1d359a55923bb45b057fbdab0d\` FOREIGN KEY (\`orderId\`) REFERENCES \`orders\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_items\` ADD CONSTRAINT \`FK_cdb99c05982d5191ac8465ac010\` FOREIGN KEY (\`productId\`) REFERENCES \`products\`(\`id\`) ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`orders\` ADD CONSTRAINT \`FK_151b79a83ba240b0cb31b2302d1\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`promos\` ADD CONSTRAINT \`FK_1340d9ba39d1876b476a5601ecb\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`service-types\` ADD CONSTRAINT \`FK_e6aec9c34377130378bd9678665\` FOREIGN KEY (\`categoryId\`) REFERENCES \`service-categories\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`credit-cards\` ADD CONSTRAINT \`FK_64862a59601e14583bc4805c2aa\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`transactions\` ADD CONSTRAINT \`FK_3dd17acf02d80e4907712f13fdc\` FOREIGN KEY (\`creditCardId\`) REFERENCES \`credit-cards\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`transactions\` ADD CONSTRAINT \`FK_a88f466d39796d3081cf96e1b66\` FOREIGN KEY (\`walletId\`) REFERENCES \`wallets\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`transactions\` ADD CONSTRAINT \`FK_6bb58f2b6e30cb51a6504599f41\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`vehicles\` ADD CONSTRAINT \`FK_20f139b9d79f917ef735efacb00\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`service-requests\` ADD CONSTRAINT \`FK_3eab0ab606f5bcc9de2f80377ab\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`service-requests\` ADD CONSTRAINT \`FK_f1070acf1cffb0cc8c6b844b2c9\` FOREIGN KEY (\`vehicleId\`) REFERENCES \`vehicles\`(\`id\`) ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`service-requests\` ADD CONSTRAINT \`FK_1adb47879e199504052ecef51db\` FOREIGN KEY (\`addressId\`) REFERENCES \`addresses\`(\`id\`) ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`service-requests\` ADD CONSTRAINT \`FK_35182423f1222f6943c139f3df2\` FOREIGN KEY (\`employeeId\`) REFERENCES \`employees\`(\`id\`) ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`service-requests\` ADD CONSTRAINT \`FK_d9ebda346c3fc7b85763ada8a27\` FOREIGN KEY (\`branchId\`) REFERENCES \`branches\`(\`id\`) ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`service-requests\` ADD CONSTRAINT \`FK_1f084995589c6597dd0ecbe47b3\` FOREIGN KEY (\`transactionId\`) REFERENCES \`transactions\`(\`id\`) ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`service-requests\` ADD CONSTRAINT \`FK_998cb3d7b5aee17411138bfd7aa\` FOREIGN KEY (\`typeId\`) REFERENCES \`service-types\`(\`id\`) ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_0a95e6aab86ff1b0278c18cf48e\` FOREIGN KEY (\`walletId\`) REFERENCES \`wallets\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`chats\` ADD CONSTRAINT \`FK_ae8951c0a763a060593606b7e2d\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`chats\` ADD CONSTRAINT \`FK_8fc30affc7bf4b723becac66884\` FOREIGN KEY (\`employeeId\`) REFERENCES \`employees\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`employees\` ADD CONSTRAINT \`FK_0ee1fa8d2cfe91f9dac54f9e2ff\` FOREIGN KEY (\`branchId\`) REFERENCES \`branches\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`branches\` ADD CONSTRAINT \`FK_7fc85a35416284146d732986c6f\` FOREIGN KEY (\`addressId\`) REFERENCES \`addresses\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`addresses\` ADD CONSTRAINT \`FK_95c93a584de49f0b0e13f753630\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`addresses\` DROP FOREIGN KEY \`FK_95c93a584de49f0b0e13f753630\``);
        await queryRunner.query(`ALTER TABLE \`branches\` DROP FOREIGN KEY \`FK_7fc85a35416284146d732986c6f\``);
        await queryRunner.query(`ALTER TABLE \`employees\` DROP FOREIGN KEY \`FK_0ee1fa8d2cfe91f9dac54f9e2ff\``);
        await queryRunner.query(`ALTER TABLE \`chats\` DROP FOREIGN KEY \`FK_8fc30affc7bf4b723becac66884\``);
        await queryRunner.query(`ALTER TABLE \`chats\` DROP FOREIGN KEY \`FK_ae8951c0a763a060593606b7e2d\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_0a95e6aab86ff1b0278c18cf48e\``);
        await queryRunner.query(`ALTER TABLE \`service-requests\` DROP FOREIGN KEY \`FK_998cb3d7b5aee17411138bfd7aa\``);
        await queryRunner.query(`ALTER TABLE \`service-requests\` DROP FOREIGN KEY \`FK_1f084995589c6597dd0ecbe47b3\``);
        await queryRunner.query(`ALTER TABLE \`service-requests\` DROP FOREIGN KEY \`FK_d9ebda346c3fc7b85763ada8a27\``);
        await queryRunner.query(`ALTER TABLE \`service-requests\` DROP FOREIGN KEY \`FK_35182423f1222f6943c139f3df2\``);
        await queryRunner.query(`ALTER TABLE \`service-requests\` DROP FOREIGN KEY \`FK_1adb47879e199504052ecef51db\``);
        await queryRunner.query(`ALTER TABLE \`service-requests\` DROP FOREIGN KEY \`FK_f1070acf1cffb0cc8c6b844b2c9\``);
        await queryRunner.query(`ALTER TABLE \`service-requests\` DROP FOREIGN KEY \`FK_3eab0ab606f5bcc9de2f80377ab\``);
        await queryRunner.query(`ALTER TABLE \`vehicles\` DROP FOREIGN KEY \`FK_20f139b9d79f917ef735efacb00\``);
        await queryRunner.query(`ALTER TABLE \`transactions\` DROP FOREIGN KEY \`FK_6bb58f2b6e30cb51a6504599f41\``);
        await queryRunner.query(`ALTER TABLE \`transactions\` DROP FOREIGN KEY \`FK_a88f466d39796d3081cf96e1b66\``);
        await queryRunner.query(`ALTER TABLE \`transactions\` DROP FOREIGN KEY \`FK_3dd17acf02d80e4907712f13fdc\``);
        await queryRunner.query(`ALTER TABLE \`credit-cards\` DROP FOREIGN KEY \`FK_64862a59601e14583bc4805c2aa\``);
        await queryRunner.query(`ALTER TABLE \`service-types\` DROP FOREIGN KEY \`FK_e6aec9c34377130378bd9678665\``);
        await queryRunner.query(`ALTER TABLE \`promos\` DROP FOREIGN KEY \`FK_1340d9ba39d1876b476a5601ecb\``);
        await queryRunner.query(`ALTER TABLE \`orders\` DROP FOREIGN KEY \`FK_151b79a83ba240b0cb31b2302d1\``);
        await queryRunner.query(`ALTER TABLE \`order_items\` DROP FOREIGN KEY \`FK_cdb99c05982d5191ac8465ac010\``);
        await queryRunner.query(`ALTER TABLE \`order_items\` DROP FOREIGN KEY \`FK_f1d359a55923bb45b057fbdab0d\``);
        await queryRunner.query(`ALTER TABLE \`products\` DROP FOREIGN KEY \`FK_ff56834e735fa78a15d0cf21926\``);
        await queryRunner.query(`ALTER TABLE \`product_images\` DROP FOREIGN KEY \`FK_b367708bf720c8dd62fc6833161\``);
        await queryRunner.query(`ALTER TABLE \`categories\` DROP FOREIGN KEY \`FK_9a6f051e66982b5f0318981bcaa\``);
        await queryRunner.query(`ALTER TABLE \`notifications\` DROP FOREIGN KEY \`FK_6018a5cad24d71d841a407929cb\``);
        await queryRunner.query(`ALTER TABLE \`notifications\` DROP FOREIGN KEY \`FK_692a909ee0fa9383e7859f9b406\``);
        await queryRunner.query(`ALTER TABLE \`device-tokens\` DROP FOREIGN KEY \`FK_0d78ba9dbc5d5f2d196acecd8ef\``);
        await queryRunner.query(`ALTER TABLE \`device-tokens\` DROP FOREIGN KEY \`FK_837f09bbda6e2a8d94bfc79d191\``);
        await queryRunner.query(`ALTER TABLE \`messages\` DROP FOREIGN KEY \`FK_89e60bfa9033af7efb53d68e96c\``);
        await queryRunner.query(`ALTER TABLE \`messages\` DROP FOREIGN KEY \`FK_4838cd4fc48a6ff2d4aa01aa646\``);
        await queryRunner.query(`ALTER TABLE \`messages\` DROP FOREIGN KEY \`FK_36bc604c820bb9adc4c75cd4115\``);
        await queryRunner.query(`DROP INDEX \`IDX_c8639b7626fa94ba8265628f21\` ON \`settings\``);
        await queryRunner.query(`DROP TABLE \`settings\``);
        await queryRunner.query(`DROP TABLE \`ads\``);
        await queryRunner.query(`DROP TABLE \`addresses\``);
        await queryRunner.query(`DROP INDEX \`REL_7fc85a35416284146d732986c6\` ON \`branches\``);
        await queryRunner.query(`DROP TABLE \`branches\``);
        await queryRunner.query(`DROP INDEX \`IDX_5a397d481bad751781fa1adfab\` ON \`employees\``);
        await queryRunner.query(`DROP INDEX \`IDX_765bc1ac8967533a04c74a9f6a\` ON \`employees\``);
        await queryRunner.query(`DROP INDEX \`IDX_31358a1a133482b25fe81b021e\` ON \`employees\``);
        await queryRunner.query(`DROP TABLE \`employees\``);
        await queryRunner.query(`DROP TABLE \`chats\``);
        await queryRunner.query(`DROP INDEX \`REL_0a95e6aab86ff1b0278c18cf48\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_1e3d0240b49c40521aaeb95329\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_97672ac88f789774dd47f7c8be\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_fe0bb3f6520ee0469504521e71\` ON \`users\``);
        await queryRunner.query(`DROP TABLE \`users\``);
        await queryRunner.query(`DROP TABLE \`service-requests\``);
        await queryRunner.query(`DROP TABLE \`vehicles\``);
        await queryRunner.query(`DROP TABLE \`transactions\``);
        await queryRunner.query(`DROP TABLE \`wallets\``);
        await queryRunner.query(`DROP TABLE \`credit-cards\``);
        await queryRunner.query(`DROP TABLE \`service-types\``);
        await queryRunner.query(`DROP TABLE \`service-categories\``);
        await queryRunner.query(`DROP TABLE \`promos\``);
        await queryRunner.query(`DROP TABLE \`orders\``);
        await queryRunner.query(`DROP TABLE \`order_items\``);
        await queryRunner.query(`DROP TABLE \`products\``);
        await queryRunner.query(`DROP TABLE \`product_images\``);
        await queryRunner.query(`DROP TABLE \`categories\``);
        await queryRunner.query(`DROP TABLE \`notifications\``);
        await queryRunner.query(`DROP TABLE \`device-tokens\``);
        await queryRunner.query(`DROP TABLE \`messages\``);
    }

}
